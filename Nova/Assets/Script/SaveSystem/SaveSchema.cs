// automatically generated by the FlatBuffers compiler, do not modify

namespace Nova
{

using System;
using FlatBuffers;

public sealed class FlatVector2 : Struct {
  public FlatVector2 __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public float A { get { return bb.GetFloat(bb_pos + 0); } }
  public float B { get { return bb.GetFloat(bb_pos + 4); } }

  public static Offset<FlatVector2> CreateFlatVector2(FlatBufferBuilder builder, float A, float B) {
    builder.Prep(4, 8);
    builder.PutFloat(B);
    builder.PutFloat(A);
    return new Offset<FlatVector2>(builder.Offset);
  }
};

public sealed class FlatVector3 : Struct {
  public FlatVector3 __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public float A { get { return bb.GetFloat(bb_pos + 0); } }
  public float B { get { return bb.GetFloat(bb_pos + 4); } }
  public float C { get { return bb.GetFloat(bb_pos + 8); } }

  public static Offset<FlatVector3> CreateFlatVector3(FlatBufferBuilder builder, float A, float B, float C) {
    builder.Prep(4, 12);
    builder.PutFloat(C);
    builder.PutFloat(B);
    builder.PutFloat(A);
    return new Offset<FlatVector3>(builder.Offset);
  }
};

public sealed class FlatVector4 : Struct {
  public FlatVector4 __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public float A { get { return bb.GetFloat(bb_pos + 0); } }
  public float B { get { return bb.GetFloat(bb_pos + 4); } }
  public float C { get { return bb.GetFloat(bb_pos + 8); } }
  public float D { get { return bb.GetFloat(bb_pos + 12); } }

  public static Offset<FlatVector4> CreateFlatVector4(FlatBufferBuilder builder, float A, float B, float C, float D) {
    builder.Prep(4, 16);
    builder.PutFloat(D);
    builder.PutFloat(C);
    builder.PutFloat(B);
    builder.PutFloat(A);
    return new Offset<FlatVector4>(builder.Offset);
  }
};

public sealed class StringValuePair : Table {
  public static StringValuePair GetRootAsStringValuePair(ByteBuffer _bb) { return GetRootAsStringValuePair(_bb, new StringValuePair()); }
  public static StringValuePair GetRootAsStringValuePair(ByteBuffer _bb, StringValuePair obj) { return (obj.__init(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public StringValuePair __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public string Name { get { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; } }
  public ArraySegment<byte>? GetNameBytes() { return __vector_as_arraysegment(4); }
  public string Value { get { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; } }
  public ArraySegment<byte>? GetValueBytes() { return __vector_as_arraysegment(6); }

  public static Offset<StringValuePair> CreateStringValuePair(FlatBufferBuilder builder,
      StringOffset nameOffset = default(StringOffset),
      StringOffset valueOffset = default(StringOffset)) {
    builder.StartObject(2);
    StringValuePair.AddValue(builder, valueOffset);
    StringValuePair.AddName(builder, nameOffset);
    return StringValuePair.EndStringValuePair(builder);
  }

  public static void StartStringValuePair(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(0, nameOffset.Value, 0); }
  public static void AddValue(FlatBufferBuilder builder, StringOffset valueOffset) { builder.AddOffset(1, valueOffset.Value, 0); }
  public static Offset<StringValuePair> EndStringValuePair(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    builder.Required(o, 4);  // name
    return new Offset<StringValuePair>(o);
  }
};

public sealed class IntValuePair : Table {
  public static IntValuePair GetRootAsIntValuePair(ByteBuffer _bb) { return GetRootAsIntValuePair(_bb, new IntValuePair()); }
  public static IntValuePair GetRootAsIntValuePair(ByteBuffer _bb, IntValuePair obj) { return (obj.__init(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public IntValuePair __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public string Name { get { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; } }
  public ArraySegment<byte>? GetNameBytes() { return __vector_as_arraysegment(4); }
  public int Value { get { int o = __offset(6); return o != 0 ? bb.GetInt(o + bb_pos) : (int)0; } }

  public static Offset<IntValuePair> CreateIntValuePair(FlatBufferBuilder builder,
      StringOffset nameOffset = default(StringOffset),
      int value = 0) {
    builder.StartObject(2);
    IntValuePair.AddValue(builder, value);
    IntValuePair.AddName(builder, nameOffset);
    return IntValuePair.EndIntValuePair(builder);
  }

  public static void StartIntValuePair(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(0, nameOffset.Value, 0); }
  public static void AddValue(FlatBufferBuilder builder, int value) { builder.AddInt(1, value, 0); }
  public static Offset<IntValuePair> EndIntValuePair(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    builder.Required(o, 4);  // name
    return new Offset<IntValuePair>(o);
  }
};

public sealed class BoolValuePair : Table {
  public static BoolValuePair GetRootAsBoolValuePair(ByteBuffer _bb) { return GetRootAsBoolValuePair(_bb, new BoolValuePair()); }
  public static BoolValuePair GetRootAsBoolValuePair(ByteBuffer _bb, BoolValuePair obj) { return (obj.__init(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public BoolValuePair __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public string Name { get { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; } }
  public ArraySegment<byte>? GetNameBytes() { return __vector_as_arraysegment(4); }
  public bool Value { get { int o = __offset(6); return o != 0 ? 0!=bb.Get(o + bb_pos) : (bool)false; } }

  public static Offset<BoolValuePair> CreateBoolValuePair(FlatBufferBuilder builder,
      StringOffset nameOffset = default(StringOffset),
      bool value = false) {
    builder.StartObject(2);
    BoolValuePair.AddName(builder, nameOffset);
    BoolValuePair.AddValue(builder, value);
    return BoolValuePair.EndBoolValuePair(builder);
  }

  public static void StartBoolValuePair(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(0, nameOffset.Value, 0); }
  public static void AddValue(FlatBufferBuilder builder, bool value) { builder.AddBool(1, value, false); }
  public static Offset<BoolValuePair> EndBoolValuePair(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    builder.Required(o, 4);  // name
    return new Offset<BoolValuePair>(o);
  }
};

public sealed class FloatValuePair : Table {
  public static FloatValuePair GetRootAsFloatValuePair(ByteBuffer _bb) { return GetRootAsFloatValuePair(_bb, new FloatValuePair()); }
  public static FloatValuePair GetRootAsFloatValuePair(ByteBuffer _bb, FloatValuePair obj) { return (obj.__init(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public FloatValuePair __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public string Name { get { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; } }
  public ArraySegment<byte>? GetNameBytes() { return __vector_as_arraysegment(4); }
  public float Value { get { int o = __offset(6); return o != 0 ? bb.GetFloat(o + bb_pos) : (float)0.0f; } }

  public static Offset<FloatValuePair> CreateFloatValuePair(FlatBufferBuilder builder,
      StringOffset nameOffset = default(StringOffset),
      float value = 0.0f) {
    builder.StartObject(2);
    FloatValuePair.AddValue(builder, value);
    FloatValuePair.AddName(builder, nameOffset);
    return FloatValuePair.EndFloatValuePair(builder);
  }

  public static void StartFloatValuePair(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(0, nameOffset.Value, 0); }
  public static void AddValue(FlatBufferBuilder builder, float value) { builder.AddFloat(1, value, 0.0f); }
  public static Offset<FloatValuePair> EndFloatValuePair(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    builder.Required(o, 4);  // name
    return new Offset<FloatValuePair>(o);
  }
};

public sealed class Vector2ValuePair : Table {
  public static Vector2ValuePair GetRootAsVector2ValuePair(ByteBuffer _bb) { return GetRootAsVector2ValuePair(_bb, new Vector2ValuePair()); }
  public static Vector2ValuePair GetRootAsVector2ValuePair(ByteBuffer _bb, Vector2ValuePair obj) { return (obj.__init(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public Vector2ValuePair __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public string Name { get { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; } }
  public ArraySegment<byte>? GetNameBytes() { return __vector_as_arraysegment(4); }
  public FlatVector2 Value { get { return GetValue(new FlatVector2()); } }
  public FlatVector2 GetValue(FlatVector2 obj) { int o = __offset(6); return o != 0 ? obj.__init(o + bb_pos, bb) : null; }

  public static void StartVector2ValuePair(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(0, nameOffset.Value, 0); }
  public static void AddValue(FlatBufferBuilder builder, Offset<FlatVector2> valueOffset) { builder.AddStruct(1, valueOffset.Value, 0); }
  public static Offset<Vector2ValuePair> EndVector2ValuePair(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    builder.Required(o, 4);  // name
    return new Offset<Vector2ValuePair>(o);
  }
};

public sealed class Vector3ValuePair : Table {
  public static Vector3ValuePair GetRootAsVector3ValuePair(ByteBuffer _bb) { return GetRootAsVector3ValuePair(_bb, new Vector3ValuePair()); }
  public static Vector3ValuePair GetRootAsVector3ValuePair(ByteBuffer _bb, Vector3ValuePair obj) { return (obj.__init(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public Vector3ValuePair __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public string Name { get { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; } }
  public ArraySegment<byte>? GetNameBytes() { return __vector_as_arraysegment(4); }
  public FlatVector3 Value { get { return GetValue(new FlatVector3()); } }
  public FlatVector3 GetValue(FlatVector3 obj) { int o = __offset(6); return o != 0 ? obj.__init(o + bb_pos, bb) : null; }

  public static void StartVector3ValuePair(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(0, nameOffset.Value, 0); }
  public static void AddValue(FlatBufferBuilder builder, Offset<FlatVector3> valueOffset) { builder.AddStruct(1, valueOffset.Value, 0); }
  public static Offset<Vector3ValuePair> EndVector3ValuePair(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    builder.Required(o, 4);  // name
    return new Offset<Vector3ValuePair>(o);
  }
};

public sealed class Vector4ValuePair : Table {
  public static Vector4ValuePair GetRootAsVector4ValuePair(ByteBuffer _bb) { return GetRootAsVector4ValuePair(_bb, new Vector4ValuePair()); }
  public static Vector4ValuePair GetRootAsVector4ValuePair(ByteBuffer _bb, Vector4ValuePair obj) { return (obj.__init(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public Vector4ValuePair __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public string Name { get { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; } }
  public ArraySegment<byte>? GetNameBytes() { return __vector_as_arraysegment(4); }
  public FlatVector4 Value { get { return GetValue(new FlatVector4()); } }
  public FlatVector4 GetValue(FlatVector4 obj) { int o = __offset(6); return o != 0 ? obj.__init(o + bb_pos, bb) : null; }

  public static void StartVector4ValuePair(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(0, nameOffset.Value, 0); }
  public static void AddValue(FlatBufferBuilder builder, Offset<FlatVector4> valueOffset) { builder.AddStruct(1, valueOffset.Value, 0); }
  public static Offset<Vector4ValuePair> EndVector4ValuePair(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    builder.Required(o, 4);  // name
    return new Offset<Vector4ValuePair>(o);
  }
};

public sealed class GameObjectValuePair : Table {
  public static GameObjectValuePair GetRootAsGameObjectValuePair(ByteBuffer _bb) { return GetRootAsGameObjectValuePair(_bb, new GameObjectValuePair()); }
  public static GameObjectValuePair GetRootAsGameObjectValuePair(ByteBuffer _bb, GameObjectValuePair obj) { return (obj.__init(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public GameObjectValuePair __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public string Name { get { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; } }
  public ArraySegment<byte>? GetNameBytes() { return __vector_as_arraysegment(4); }
  public FlatGameObject Value { get { return GetValue(new FlatGameObject()); } }
  public FlatGameObject GetValue(FlatGameObject obj) { int o = __offset(6); return o != 0 ? obj.__init(__indirect(o + bb_pos), bb) : null; }

  public static Offset<GameObjectValuePair> CreateGameObjectValuePair(FlatBufferBuilder builder,
      StringOffset nameOffset = default(StringOffset),
      Offset<FlatGameObject> valueOffset = default(Offset<FlatGameObject>)) {
    builder.StartObject(2);
    GameObjectValuePair.AddValue(builder, valueOffset);
    GameObjectValuePair.AddName(builder, nameOffset);
    return GameObjectValuePair.EndGameObjectValuePair(builder);
  }

  public static void StartGameObjectValuePair(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(0, nameOffset.Value, 0); }
  public static void AddValue(FlatBufferBuilder builder, Offset<FlatGameObject> valueOffset) { builder.AddOffset(1, valueOffset.Value, 0); }
  public static Offset<GameObjectValuePair> EndGameObjectValuePair(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    builder.Required(o, 4);  // name
    return new Offset<GameObjectValuePair>(o);
  }
};

public sealed class ComponentValuePair : Table {
  public static ComponentValuePair GetRootAsComponentValuePair(ByteBuffer _bb) { return GetRootAsComponentValuePair(_bb, new ComponentValuePair()); }
  public static ComponentValuePair GetRootAsComponentValuePair(ByteBuffer _bb, ComponentValuePair obj) { return (obj.__init(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public ComponentValuePair __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public string Name { get { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; } }
  public ArraySegment<byte>? GetNameBytes() { return __vector_as_arraysegment(4); }
  public FlatComponent Value { get { return GetValue(new FlatComponent()); } }
  public FlatComponent GetValue(FlatComponent obj) { int o = __offset(6); return o != 0 ? obj.__init(__indirect(o + bb_pos), bb) : null; }

  public static Offset<ComponentValuePair> CreateComponentValuePair(FlatBufferBuilder builder,
      StringOffset nameOffset = default(StringOffset),
      Offset<FlatComponent> valueOffset = default(Offset<FlatComponent>)) {
    builder.StartObject(2);
    ComponentValuePair.AddValue(builder, valueOffset);
    ComponentValuePair.AddName(builder, nameOffset);
    return ComponentValuePair.EndComponentValuePair(builder);
  }

  public static void StartComponentValuePair(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(0, nameOffset.Value, 0); }
  public static void AddValue(FlatBufferBuilder builder, Offset<FlatComponent> valueOffset) { builder.AddOffset(1, valueOffset.Value, 0); }
  public static Offset<ComponentValuePair> EndComponentValuePair(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    builder.Required(o, 4);  // name
    return new Offset<ComponentValuePair>(o);
  }
};

public sealed class FlatSaveData : Table {
  public static FlatSaveData GetRootAsFlatSaveData(ByteBuffer _bb) { return GetRootAsFlatSaveData(_bb, new FlatSaveData()); }
  public static FlatSaveData GetRootAsFlatSaveData(ByteBuffer _bb, FlatSaveData obj) { return (obj.__init(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public FlatSaveData __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public FlatGameObject GetGameObjects(int j) { return GetGameObjects(new FlatGameObject(), j); }
  public FlatGameObject GetGameObjects(FlatGameObject obj, int j) { int o = __offset(4); return o != 0 ? obj.__init(__indirect(__vector(o) + j * 4), bb) : null; }
  public int GameObjectsLength { get { int o = __offset(4); return o != 0 ? __vector_len(o) : 0; } }
  public StringValuePair GetStringValues(int j) { return GetStringValues(new StringValuePair(), j); }
  public StringValuePair GetStringValues(StringValuePair obj, int j) { int o = __offset(6); return o != 0 ? obj.__init(__indirect(__vector(o) + j * 4), bb) : null; }
  public int StringValuesLength { get { int o = __offset(6); return o != 0 ? __vector_len(o) : 0; } }
  public IntValuePair GetIntValues(int j) { return GetIntValues(new IntValuePair(), j); }
  public IntValuePair GetIntValues(IntValuePair obj, int j) { int o = __offset(8); return o != 0 ? obj.__init(__indirect(__vector(o) + j * 4), bb) : null; }
  public int IntValuesLength { get { int o = __offset(8); return o != 0 ? __vector_len(o) : 0; } }
  public BoolValuePair GetBoolValues(int j) { return GetBoolValues(new BoolValuePair(), j); }
  public BoolValuePair GetBoolValues(BoolValuePair obj, int j) { int o = __offset(10); return o != 0 ? obj.__init(__indirect(__vector(o) + j * 4), bb) : null; }
  public int BoolValuesLength { get { int o = __offset(10); return o != 0 ? __vector_len(o) : 0; } }
  public FloatValuePair GetFloatValues(int j) { return GetFloatValues(new FloatValuePair(), j); }
  public FloatValuePair GetFloatValues(FloatValuePair obj, int j) { int o = __offset(12); return o != 0 ? obj.__init(__indirect(__vector(o) + j * 4), bb) : null; }
  public int FloatValuesLength { get { int o = __offset(12); return o != 0 ? __vector_len(o) : 0; } }
  public Vector2ValuePair GetVector2Values(int j) { return GetVector2Values(new Vector2ValuePair(), j); }
  public Vector2ValuePair GetVector2Values(Vector2ValuePair obj, int j) { int o = __offset(14); return o != 0 ? obj.__init(__indirect(__vector(o) + j * 4), bb) : null; }
  public int Vector2ValuesLength { get { int o = __offset(14); return o != 0 ? __vector_len(o) : 0; } }
  public Vector3ValuePair GetVector3Values(int j) { return GetVector3Values(new Vector3ValuePair(), j); }
  public Vector3ValuePair GetVector3Values(Vector3ValuePair obj, int j) { int o = __offset(16); return o != 0 ? obj.__init(__indirect(__vector(o) + j * 4), bb) : null; }
  public int Vector3ValuesLength { get { int o = __offset(16); return o != 0 ? __vector_len(o) : 0; } }
  public Vector4ValuePair GetVector4Values(int j) { return GetVector4Values(new Vector4ValuePair(), j); }
  public Vector4ValuePair GetVector4Values(Vector4ValuePair obj, int j) { int o = __offset(18); return o != 0 ? obj.__init(__indirect(__vector(o) + j * 4), bb) : null; }
  public int Vector4ValuesLength { get { int o = __offset(18); return o != 0 ? __vector_len(o) : 0; } }

  public static Offset<FlatSaveData> CreateFlatSaveData(FlatBufferBuilder builder,
      VectorOffset gameObjectsOffset = default(VectorOffset),
      VectorOffset stringValuesOffset = default(VectorOffset),
      VectorOffset intValuesOffset = default(VectorOffset),
      VectorOffset boolValuesOffset = default(VectorOffset),
      VectorOffset floatValuesOffset = default(VectorOffset),
      VectorOffset vector2ValuesOffset = default(VectorOffset),
      VectorOffset vector3ValuesOffset = default(VectorOffset),
      VectorOffset vector4ValuesOffset = default(VectorOffset)) {
    builder.StartObject(8);
    FlatSaveData.AddVector4Values(builder, vector4ValuesOffset);
    FlatSaveData.AddVector3Values(builder, vector3ValuesOffset);
    FlatSaveData.AddVector2Values(builder, vector2ValuesOffset);
    FlatSaveData.AddFloatValues(builder, floatValuesOffset);
    FlatSaveData.AddBoolValues(builder, boolValuesOffset);
    FlatSaveData.AddIntValues(builder, intValuesOffset);
    FlatSaveData.AddStringValues(builder, stringValuesOffset);
    FlatSaveData.AddGameObjects(builder, gameObjectsOffset);
    return FlatSaveData.EndFlatSaveData(builder);
  }

  public static void StartFlatSaveData(FlatBufferBuilder builder) { builder.StartObject(8); }
  public static void AddGameObjects(FlatBufferBuilder builder, VectorOffset gameObjectsOffset) { builder.AddOffset(0, gameObjectsOffset.Value, 0); }
  public static VectorOffset CreateGameObjectsVector(FlatBufferBuilder builder, Offset<FlatGameObject>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static void StartGameObjectsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddStringValues(FlatBufferBuilder builder, VectorOffset stringValuesOffset) { builder.AddOffset(1, stringValuesOffset.Value, 0); }
  public static VectorOffset CreateStringValuesVector(FlatBufferBuilder builder, Offset<StringValuePair>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static void StartStringValuesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddIntValues(FlatBufferBuilder builder, VectorOffset intValuesOffset) { builder.AddOffset(2, intValuesOffset.Value, 0); }
  public static VectorOffset CreateIntValuesVector(FlatBufferBuilder builder, Offset<IntValuePair>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static void StartIntValuesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddBoolValues(FlatBufferBuilder builder, VectorOffset boolValuesOffset) { builder.AddOffset(3, boolValuesOffset.Value, 0); }
  public static VectorOffset CreateBoolValuesVector(FlatBufferBuilder builder, Offset<BoolValuePair>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static void StartBoolValuesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddFloatValues(FlatBufferBuilder builder, VectorOffset floatValuesOffset) { builder.AddOffset(4, floatValuesOffset.Value, 0); }
  public static VectorOffset CreateFloatValuesVector(FlatBufferBuilder builder, Offset<FloatValuePair>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static void StartFloatValuesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddVector2Values(FlatBufferBuilder builder, VectorOffset vector2ValuesOffset) { builder.AddOffset(5, vector2ValuesOffset.Value, 0); }
  public static VectorOffset CreateVector2ValuesVector(FlatBufferBuilder builder, Offset<Vector2ValuePair>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static void StartVector2ValuesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddVector3Values(FlatBufferBuilder builder, VectorOffset vector3ValuesOffset) { builder.AddOffset(6, vector3ValuesOffset.Value, 0); }
  public static VectorOffset CreateVector3ValuesVector(FlatBufferBuilder builder, Offset<Vector3ValuePair>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static void StartVector3ValuesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddVector4Values(FlatBufferBuilder builder, VectorOffset vector4ValuesOffset) { builder.AddOffset(7, vector4ValuesOffset.Value, 0); }
  public static VectorOffset CreateVector4ValuesVector(FlatBufferBuilder builder, Offset<Vector4ValuePair>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static void StartVector4ValuesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<FlatSaveData> EndFlatSaveData(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<FlatSaveData>(o);
  }
  public static void FinishFlatSaveDataBuffer(FlatBufferBuilder builder, Offset<FlatSaveData> offset) { builder.Finish(offset.Value); }
};

public sealed class FlatGameObject : Table {
  public static FlatGameObject GetRootAsFlatGameObject(ByteBuffer _bb) { return GetRootAsFlatGameObject(_bb, new FlatGameObject()); }
  public static FlatGameObject GetRootAsFlatGameObject(ByteBuffer _bb, FlatGameObject obj) { return (obj.__init(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public FlatGameObject __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public string Name { get { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; } }
  public ArraySegment<byte>? GetNameBytes() { return __vector_as_arraysegment(4); }
  public string PrefabPath { get { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; } }
  public ArraySegment<byte>? GetPrefabPathBytes() { return __vector_as_arraysegment(6); }
  public string Tag { get { int o = __offset(8); return o != 0 ? __string(o + bb_pos) : null; } }
  public ArraySegment<byte>? GetTagBytes() { return __vector_as_arraysegment(8); }
  public int Layer { get { int o = __offset(10); return o != 0 ? bb.GetInt(o + bb_pos) : (int)0; } }
  public bool IsStatic { get { int o = __offset(12); return o != 0 ? 0!=bb.Get(o + bb_pos) : (bool)false; } }
  public bool IsActive { get { int o = __offset(14); return o != 0 ? 0!=bb.Get(o + bb_pos) : (bool)false; } }
  public FlatGameObject GetChildren(int j) { return GetChildren(new FlatGameObject(), j); }
  public FlatGameObject GetChildren(FlatGameObject obj, int j) { int o = __offset(16); return o != 0 ? obj.__init(__indirect(__vector(o) + j * 4), bb) : null; }
  public int ChildrenLength { get { int o = __offset(16); return o != 0 ? __vector_len(o) : 0; } }
  public FlatComponent GetComponents(int j) { return GetComponents(new FlatComponent(), j); }
  public FlatComponent GetComponents(FlatComponent obj, int j) { int o = __offset(18); return o != 0 ? obj.__init(__indirect(__vector(o) + j * 4), bb) : null; }
  public int ComponentsLength { get { int o = __offset(18); return o != 0 ? __vector_len(o) : 0; } }

  public static Offset<FlatGameObject> CreateFlatGameObject(FlatBufferBuilder builder,
      StringOffset nameOffset = default(StringOffset),
      StringOffset prefabPathOffset = default(StringOffset),
      StringOffset tagOffset = default(StringOffset),
      int layer = 0,
      bool isStatic = false,
      bool isActive = false,
      VectorOffset childrenOffset = default(VectorOffset),
      VectorOffset componentsOffset = default(VectorOffset)) {
    builder.StartObject(8);
    FlatGameObject.AddComponents(builder, componentsOffset);
    FlatGameObject.AddChildren(builder, childrenOffset);
    FlatGameObject.AddLayer(builder, layer);
    FlatGameObject.AddTag(builder, tagOffset);
    FlatGameObject.AddPrefabPath(builder, prefabPathOffset);
    FlatGameObject.AddName(builder, nameOffset);
    FlatGameObject.AddIsActive(builder, isActive);
    FlatGameObject.AddIsStatic(builder, isStatic);
    return FlatGameObject.EndFlatGameObject(builder);
  }

  public static void StartFlatGameObject(FlatBufferBuilder builder) { builder.StartObject(8); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(0, nameOffset.Value, 0); }
  public static void AddPrefabPath(FlatBufferBuilder builder, StringOffset prefabPathOffset) { builder.AddOffset(1, prefabPathOffset.Value, 0); }
  public static void AddTag(FlatBufferBuilder builder, StringOffset tagOffset) { builder.AddOffset(2, tagOffset.Value, 0); }
  public static void AddLayer(FlatBufferBuilder builder, int layer) { builder.AddInt(3, layer, 0); }
  public static void AddIsStatic(FlatBufferBuilder builder, bool isStatic) { builder.AddBool(4, isStatic, false); }
  public static void AddIsActive(FlatBufferBuilder builder, bool isActive) { builder.AddBool(5, isActive, false); }
  public static void AddChildren(FlatBufferBuilder builder, VectorOffset childrenOffset) { builder.AddOffset(6, childrenOffset.Value, 0); }
  public static VectorOffset CreateChildrenVector(FlatBufferBuilder builder, Offset<FlatGameObject>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static void StartChildrenVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddComponents(FlatBufferBuilder builder, VectorOffset componentsOffset) { builder.AddOffset(7, componentsOffset.Value, 0); }
  public static VectorOffset CreateComponentsVector(FlatBufferBuilder builder, Offset<FlatComponent>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static void StartComponentsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<FlatGameObject> EndFlatGameObject(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    builder.Required(o, 4);  // name
    builder.Required(o, 6);  // prefabPath
    builder.Required(o, 8);  // tag
    return new Offset<FlatGameObject>(o);
  }
};

public sealed class FlatComponent : Table {
  public static FlatComponent GetRootAsFlatComponent(ByteBuffer _bb) { return GetRootAsFlatComponent(_bb, new FlatComponent()); }
  public static FlatComponent GetRootAsFlatComponent(ByteBuffer _bb, FlatComponent obj) { return (obj.__init(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public FlatComponent __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public string Type { get { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; } }
  public ArraySegment<byte>? GetTypeBytes() { return __vector_as_arraysegment(4); }
  public StringValuePair GetStringValues(int j) { return GetStringValues(new StringValuePair(), j); }
  public StringValuePair GetStringValues(StringValuePair obj, int j) { int o = __offset(6); return o != 0 ? obj.__init(__indirect(__vector(o) + j * 4), bb) : null; }
  public int StringValuesLength { get { int o = __offset(6); return o != 0 ? __vector_len(o) : 0; } }
  public IntValuePair GetIntValues(int j) { return GetIntValues(new IntValuePair(), j); }
  public IntValuePair GetIntValues(IntValuePair obj, int j) { int o = __offset(8); return o != 0 ? obj.__init(__indirect(__vector(o) + j * 4), bb) : null; }
  public int IntValuesLength { get { int o = __offset(8); return o != 0 ? __vector_len(o) : 0; } }
  public BoolValuePair GetBoolValues(int j) { return GetBoolValues(new BoolValuePair(), j); }
  public BoolValuePair GetBoolValues(BoolValuePair obj, int j) { int o = __offset(10); return o != 0 ? obj.__init(__indirect(__vector(o) + j * 4), bb) : null; }
  public int BoolValuesLength { get { int o = __offset(10); return o != 0 ? __vector_len(o) : 0; } }
  public FloatValuePair GetFloatValues(int j) { return GetFloatValues(new FloatValuePair(), j); }
  public FloatValuePair GetFloatValues(FloatValuePair obj, int j) { int o = __offset(12); return o != 0 ? obj.__init(__indirect(__vector(o) + j * 4), bb) : null; }
  public int FloatValuesLength { get { int o = __offset(12); return o != 0 ? __vector_len(o) : 0; } }
  public Vector2ValuePair GetVector2Values(int j) { return GetVector2Values(new Vector2ValuePair(), j); }
  public Vector2ValuePair GetVector2Values(Vector2ValuePair obj, int j) { int o = __offset(14); return o != 0 ? obj.__init(__indirect(__vector(o) + j * 4), bb) : null; }
  public int Vector2ValuesLength { get { int o = __offset(14); return o != 0 ? __vector_len(o) : 0; } }
  public Vector3ValuePair GetVector3Values(int j) { return GetVector3Values(new Vector3ValuePair(), j); }
  public Vector3ValuePair GetVector3Values(Vector3ValuePair obj, int j) { int o = __offset(16); return o != 0 ? obj.__init(__indirect(__vector(o) + j * 4), bb) : null; }
  public int Vector3ValuesLength { get { int o = __offset(16); return o != 0 ? __vector_len(o) : 0; } }
  public Vector4ValuePair GetVector4Values(int j) { return GetVector4Values(new Vector4ValuePair(), j); }
  public Vector4ValuePair GetVector4Values(Vector4ValuePair obj, int j) { int o = __offset(18); return o != 0 ? obj.__init(__indirect(__vector(o) + j * 4), bb) : null; }
  public int Vector4ValuesLength { get { int o = __offset(18); return o != 0 ? __vector_len(o) : 0; } }
  public GameObjectValuePair GetGameObjects(int j) { return GetGameObjects(new GameObjectValuePair(), j); }
  public GameObjectValuePair GetGameObjects(GameObjectValuePair obj, int j) { int o = __offset(20); return o != 0 ? obj.__init(__indirect(__vector(o) + j * 4), bb) : null; }
  public int GameObjectsLength { get { int o = __offset(20); return o != 0 ? __vector_len(o) : 0; } }
  public ComponentValuePair GetComponents(int j) { return GetComponents(new ComponentValuePair(), j); }
  public ComponentValuePair GetComponents(ComponentValuePair obj, int j) { int o = __offset(22); return o != 0 ? obj.__init(__indirect(__vector(o) + j * 4), bb) : null; }
  public int ComponentsLength { get { int o = __offset(22); return o != 0 ? __vector_len(o) : 0; } }

  public static Offset<FlatComponent> CreateFlatComponent(FlatBufferBuilder builder,
      StringOffset typeOffset = default(StringOffset),
      VectorOffset stringValuesOffset = default(VectorOffset),
      VectorOffset intValuesOffset = default(VectorOffset),
      VectorOffset boolValuesOffset = default(VectorOffset),
      VectorOffset floatValuesOffset = default(VectorOffset),
      VectorOffset vector2ValuesOffset = default(VectorOffset),
      VectorOffset vector3ValuesOffset = default(VectorOffset),
      VectorOffset vector4ValuesOffset = default(VectorOffset),
      VectorOffset gameObjectsOffset = default(VectorOffset),
      VectorOffset componentsOffset = default(VectorOffset)) {
    builder.StartObject(10);
    FlatComponent.AddComponents(builder, componentsOffset);
    FlatComponent.AddGameObjects(builder, gameObjectsOffset);
    FlatComponent.AddVector4Values(builder, vector4ValuesOffset);
    FlatComponent.AddVector3Values(builder, vector3ValuesOffset);
    FlatComponent.AddVector2Values(builder, vector2ValuesOffset);
    FlatComponent.AddFloatValues(builder, floatValuesOffset);
    FlatComponent.AddBoolValues(builder, boolValuesOffset);
    FlatComponent.AddIntValues(builder, intValuesOffset);
    FlatComponent.AddStringValues(builder, stringValuesOffset);
    FlatComponent.AddType(builder, typeOffset);
    return FlatComponent.EndFlatComponent(builder);
  }

  public static void StartFlatComponent(FlatBufferBuilder builder) { builder.StartObject(10); }
  public static void AddType(FlatBufferBuilder builder, StringOffset typeOffset) { builder.AddOffset(0, typeOffset.Value, 0); }
  public static void AddStringValues(FlatBufferBuilder builder, VectorOffset stringValuesOffset) { builder.AddOffset(1, stringValuesOffset.Value, 0); }
  public static VectorOffset CreateStringValuesVector(FlatBufferBuilder builder, Offset<StringValuePair>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static void StartStringValuesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddIntValues(FlatBufferBuilder builder, VectorOffset intValuesOffset) { builder.AddOffset(2, intValuesOffset.Value, 0); }
  public static VectorOffset CreateIntValuesVector(FlatBufferBuilder builder, Offset<IntValuePair>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static void StartIntValuesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddBoolValues(FlatBufferBuilder builder, VectorOffset boolValuesOffset) { builder.AddOffset(3, boolValuesOffset.Value, 0); }
  public static VectorOffset CreateBoolValuesVector(FlatBufferBuilder builder, Offset<BoolValuePair>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static void StartBoolValuesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddFloatValues(FlatBufferBuilder builder, VectorOffset floatValuesOffset) { builder.AddOffset(4, floatValuesOffset.Value, 0); }
  public static VectorOffset CreateFloatValuesVector(FlatBufferBuilder builder, Offset<FloatValuePair>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static void StartFloatValuesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddVector2Values(FlatBufferBuilder builder, VectorOffset vector2ValuesOffset) { builder.AddOffset(5, vector2ValuesOffset.Value, 0); }
  public static VectorOffset CreateVector2ValuesVector(FlatBufferBuilder builder, Offset<Vector2ValuePair>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static void StartVector2ValuesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddVector3Values(FlatBufferBuilder builder, VectorOffset vector3ValuesOffset) { builder.AddOffset(6, vector3ValuesOffset.Value, 0); }
  public static VectorOffset CreateVector3ValuesVector(FlatBufferBuilder builder, Offset<Vector3ValuePair>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static void StartVector3ValuesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddVector4Values(FlatBufferBuilder builder, VectorOffset vector4ValuesOffset) { builder.AddOffset(7, vector4ValuesOffset.Value, 0); }
  public static VectorOffset CreateVector4ValuesVector(FlatBufferBuilder builder, Offset<Vector4ValuePair>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static void StartVector4ValuesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddGameObjects(FlatBufferBuilder builder, VectorOffset gameObjectsOffset) { builder.AddOffset(8, gameObjectsOffset.Value, 0); }
  public static VectorOffset CreateGameObjectsVector(FlatBufferBuilder builder, Offset<GameObjectValuePair>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static void StartGameObjectsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddComponents(FlatBufferBuilder builder, VectorOffset componentsOffset) { builder.AddOffset(9, componentsOffset.Value, 0); }
  public static VectorOffset CreateComponentsVector(FlatBufferBuilder builder, Offset<ComponentValuePair>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static void StartComponentsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<FlatComponent> EndFlatComponent(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<FlatComponent>(o);
  }
};

public sealed class value : Table {
  public static value GetRootAsvalue(ByteBuffer _bb) { return GetRootAsvalue(_bb, new value()); }
  public static value GetRootAsvalue(ByteBuffer _bb, value obj) { return (obj.__init(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public value __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public string Keyname { get { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; } }
  public ArraySegment<byte>? GetKeynameBytes() { return __vector_as_arraysegment(4); }
  public string StringValue { get { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; } }
  public ArraySegment<byte>? GetStringValueBytes() { return __vector_as_arraysegment(6); }

  public static Offset<value> Createvalue(FlatBufferBuilder builder,
      StringOffset keynameOffset = default(StringOffset),
      StringOffset stringValueOffset = default(StringOffset)) {
    builder.StartObject(2);
    value.AddStringValue(builder, stringValueOffset);
    value.AddKeyname(builder, keynameOffset);
    return value.Endvalue(builder);
  }

  public static void Startvalue(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddKeyname(FlatBufferBuilder builder, StringOffset keynameOffset) { builder.AddOffset(0, keynameOffset.Value, 0); }
  public static void AddStringValue(FlatBufferBuilder builder, StringOffset stringValueOffset) { builder.AddOffset(1, stringValueOffset.Value, 0); }
  public static Offset<value> Endvalue(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    builder.Required(o, 4);  // keyname
    return new Offset<value>(o);
  }
};

public sealed class test : Table {
  public static test GetRootAstest(ByteBuffer _bb) { return GetRootAstest(_bb, new test()); }
  public static test GetRootAstest(ByteBuffer _bb, test obj) { return (obj.__init(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public test __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public value GetValues(int j) { return GetValues(new value(), j); }
  public value GetValues(value obj, int j) { int o = __offset(4); return o != 0 ? obj.__init(__indirect(__vector(o) + j * 4), bb) : null; }
  public int ValuesLength { get { int o = __offset(4); return o != 0 ? __vector_len(o) : 0; } }

  public static Offset<test> Createtest(FlatBufferBuilder builder,
      VectorOffset valuesOffset = default(VectorOffset)) {
    builder.StartObject(1);
    test.AddValues(builder, valuesOffset);
    return test.Endtest(builder);
  }

  public static void Starttest(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddValues(FlatBufferBuilder builder, VectorOffset valuesOffset) { builder.AddOffset(0, valuesOffset.Value, 0); }
  public static VectorOffset CreateValuesVector(FlatBufferBuilder builder, Offset<value>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static void StartValuesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<test> Endtest(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<test>(o);
  }
};


}
